# Config for a custom CNN model
num_classes: 2  # Number of classes in the dataset

# Data
data:
  train_dir: "data/train"  # Path to the training data
  val_dir: "data/val"  # Path to the validation data
  test_dir: "data/test"  # Path to the test data
  batch_size: 32  # Batch size
  num_workers: 4  # Number of workers for data loading
  pin_memory: True  # Pin memory for faster GPU transfer

# Optimizer
optimizer:
  type: "Adam"  # Can be "Adam", "SGD", or any other optimizer from torch.optim
  lr: 0.001  # Learning rate
  weight_decay: 0.0001  # Weight decay
  momentum: 0.9  # Momentum (only for SGD)

# Scheduler
scheduler:
  type: "StepLR"  # Can be "StepLR", "ReduceLROnPlateau", or any other scheduler from torch.optim.lr_scheduler
  step_size: 10  # Step size for StepLR
  gamma: 0.1  # Gamma for StepLR or factor for ReduceLROnPlateau
  patience: 5  # Patience for ReduceLROnPlateau

# Loss
loss: "CrossEntropyLoss"  # Can be "CrossEntropyLoss", "BCEWithLogitsLoss", or any other loss from torch.nn

# Metrics
metrics:
  - "accuracy"  # List of metrics to compute

# Model
model:

  # Custom CNN model
  backbone:
    type: "custom"  # Can be "custom", "resnet18", or any other model from timm or torchvision
    library: ""  # Only needed if using timm or torchvision
    pretrained: False  # Use pretrained weights or not (only for timm or torchvision)
    layers:  # Only needed if using a custom backbone
      - [Conv, [3, 32, 7, 2]]
      - [Conv, [32, 64, 3, 1]]
      - [Conv, [64, 128, 3, 1]]
      - [Conv, [128, 256, 3, 1]]
      - [Conv, [256, 512, 3, 1]]

  exit_head:
    - [Linear, [64 * 56 * 56, 512]]
    - [ReLU, []]
    - [Dropout, [0.5]]
    - [Linear, [512, num_classes]]
    - [Linear, [128 * 28 * 28, 512]]
    - [ReLU, []]
    - [Dropout, [0.5]]
    - [Linear, [512, num_classes]]
    - [Linear, [256 * 14 * 14, 512]]
    - [ReLU, []]
    - [Dropout, [0.5]]
    - [Linear, [512, num_classes]]
    - [Linear, [512 * 7 * 7, 1024]]
    - [ReLU, []]
    - [Dropout, [0.5]]
    - [Linear, [1024, num_classes]]